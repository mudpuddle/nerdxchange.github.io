"use strict";angular.module("nergXApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","firebase","firebase.utils","simpleLogin"]),angular.module("nergXApp").controller("MainCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("firebase.config",[]).constant("FBURL","https://nerdx.firebaseio.com").constant("SIMPLE_LOGIN_PROVIDERS",["github"]).constant("loginRedirectPath","/login"),angular.module("firebase.utils",["firebase","firebase.config"]).factory("fbutil",["$window","FBURL","$firebase",function(a,b,c){function d(a){for(var b=0;b<a.length;b++)if(angular.isArray(a[b]))a[b]=d(a[b]);else if("string"!=typeof a[b])throw new Error("Argument "+b+" to firebaseRef is not a string: "+a[b]);return a.join("/")}function e(){var c=new a.Firebase(b),e=Array.prototype.slice.call(arguments);return e.length&&(c=c.child(d(e))),c}function f(a,b){var d=e(a);return b=angular.extend({},b),angular.forEach(["limit","startAt","endAt"],function(a){if(b.hasOwnProperty(a)){var c=b[a];d=d[a].apply(d,angular.isArray(c)?c:[c]),delete b[a]}}),c(d,b)}return{syncObject:function(){return f.apply(null,arguments).$asObject()},syncArray:function(){return f.apply(null,arguments).$asArray()},ref:e}}]),angular.module("nergXApp").controller("ChatCtrl",["$scope","fbutil","$timeout",function(a,b,c){function d(b){a.err=b,c(function(){a.err=null},5e3)}a.messages=b.syncArray("messages",{limit:10}),a.messages.$loaded().catch(d),a.addMessage=function(b){b&&a.messages.$add({text:b}).catch(d)}}]),angular.module("nergXApp").filter("reverse",function(){return function(a){return angular.isArray(a)?a.slice().reverse():[]}}),function(){angular.module("simpleLogin",["firebase","firebase.utils","firebase.config"]).factory("authRequired",["simpleLogin","$q",function(a,b){return function(){return a.getUser().then(function(a){return a?a:b.reject({authRequired:!0})})}}]).factory("simpleLogin",["$firebaseSimpleLogin","fbutil","$q","$rootScope",function(a,b,c,d){function e(){h.initialized=!0,h.user=f.user||null,angular.forEach(g,function(a){a(h.user)})}var f=a(b.ref()),g=[],h={user:null,initialized:!1,getUser:function(){return f.$getCurrentUser()},login:function(a,b){return f.$login(a,b)},logout:function(){f.$logout()},watch:function(a,b){g.push(a),h.getUser().then(function(b){a(b)});var c=function(){var b=g.indexOf(a);b>-1&&g.splice(b,1)};return b&&b.$on("$destroy",c),c}};return d.$on("$firebaseSimpleLogin:login",e),d.$on("$firebaseSimpleLogin:logout",e),d.$on("$firebaseSimpleLogin:error",e),f.$getCurrentUser(e),h}])}(),angular.module("nergXApp").controller("LoginCtrl",["$scope","simpleLogin","$location",function(a,b,c){function d(d,e){a.err=null,b.login(d,e).then(function(){c.path("/account")},function(b){a.err=b})}a.oauthlogin=function(a){d(a,{rememberMe:!0})}}]),angular.module("nergXApp").controller("AccountCtrl",["$scope","user","simpleLogin","fbutil","$timeout",function(a,b,c,d){function e(b){a.profile&&a.profile.$destroy(),d.syncObject("users/"+b.uid).$bindTo(a,"profile")}a.user=b,a.logout=c.logout,a.messages=[],e(b)}]),angular.module("nergXApp").directive("ngShowAuth",["simpleLogin","$timeout",function(a,b){var c;return a.watch(function(a){c=!!a}),{restrict:"A",link:function(d,e){function f(){b(function(){e.toggleClass("ng-cloak",!c)},0)}e.addClass("ng-cloak"),a.watch(f,d),a.getUser(f)}}}]),angular.module("nergXApp").directive("ngHideAuth",["simpleLogin","$timeout",function(a,b){var c;return a.watch(function(a){c=!!a}),{restrict:"A",link:function(d,e){function f(){b(function(){e.toggleClass("ng-cloak",c!==!1)},0)}e.addClass("ng-cloak"),a.watch(f,d),a.getUser(f)}}}]),angular.module("nergXApp").config(["$routeProvider","SECURED_ROUTES",function(a,b){a.whenAuthenticated=function(c,d){return d.resolve=d.resolve||{},d.resolve.user=["authRequired",function(a){return a()}],a.when(c,d),b[c]=!0,a}}]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl"}).when("/chat",{templateUrl:"views/chat.html",controller:"ChatCtrl"}).whenAuthenticated("/account",{templateUrl:"views/account.html",controller:"AccountCtrl"}).when("/chat",{templateUrl:"views/chat.html",controller:"ChatCtrl"}).otherwise({redirectTo:"/"})}]).run(["$rootScope","$location","simpleLogin","SECURED_ROUTES","loginRedirectPath",function(a,b,c,d,e){function f(a){!a&&g(b.path())&&b.path(e)}function g(a){return d.hasOwnProperty(a)}c.watch(f,a),a.$on("$routeChangeError",function(a,c,d,f){angular.isObject(f)&&f.authRequired&&b.path(e)})}]).constant("SECURED_ROUTES",{});